---
# Install Elasticsearch Plugins
#
# You will need to define an array called 'elasticsearch_plugins' in your playbook or inventory, such that:
#
# elasticsearch_plugins:
#  - { name: '<plugin name>', url: '<[optional] plugin url>' }
#  - ...
# where if you were to install the plugin via bin/plugin, you would type:
#
# bin/plugin -install <plugin name>
#
# or
#
# bin/plugin -install <plugin name> -url <plugin url>

# Example for https://github.com/elasticsearch/elasticsearch-mapper-attachments (bin/plugin -install elasticsearch/elasticsearch-mapper-attachments/1.9.0):
# elasticsearch_plugins:
#  - { name: 'elasticsearch/elasticsearch-mapper-attachments/1.9.0' }
#
# Example for https://github.com/richardwilly98/elasticsearch-river-mongodb (bin/plugin -i com.github.richardwilly98.elasticsearch/elasticsearch-river-mongodb/1.7.1):
# elasticsearch_plugins:
#  - { name: 'com.github.richardwilly98.elasticsearch/elasticsearch-river-mongodb/1.7.1' }
#
# Example for https://github.com/imotov/elasticsearch-facet-script (bin/plugin -install facet-script -url http://dl.bintray.com/content/imotov/elasticsearch-plugins/elasticsearch-facet-script-1.1.2.zip):
# elasticsearch_plugins:
#  - { name: 'facet-script', url: 'http://dl.bintray.com/content/imotov/elasticsearch-plugins/elasticsearch-facet-script-1.1.2.zip' }
#
# Plugin cofiguration can be added under config:

# Loop though elasticsearch_plugins and install them
- name: Installing Plugins by Name
  action: >
    shell ./plugin -install {{ item.name }} --silent
    chdir={{ elasticsearch_home_dir }}/bin
  when: item.url is not defined and item.file is not defined
  with_items: elasticsearch_plugins
  ignore_errors: yes
  notify: restart elasticsearch

- name: Installing Plugins by URL
  action: >
    shell ./plugin -install {{ item.name }} -url {{ item.url }} --silent
    chdir={{ elasticsearch_home_dir }}/bin
  when: item.url is defined
  with_items: elasticsearch_plugins
  ignore_errors: yes
  notify: restart elasticsearch

- name: Creating Plugin directories as needed
  action: >
    file
    path="{{ elasticsearch_plugin_dir }}/{{ item.name }}"
    state=directory
    owner={{ elasticsearch_user }}
    group={{ elasticsearch_group }}
    recurse=yes
  when: item.file is defined
  with_items: elasticsearch_plugins
  notify: restart elasticsearch

- name: Installing Plugins by Archive
  action: >
    unarchive
    src={{ item.file }}
    dest={{ elasticsearch_plugin_dir }}/{{ item.name }}
    owner={{ elasticsearch_user }}
    group={{ elasticsearch_group }}
  when: item.file is defined
  with_items: elasticsearch_plugins
  ignore_errors: yes
  notify: restart elasticsearch

- name: Adding Plugins Configuration
  action: >
    lineinfile
    dest=/etc/elasticsearch/elasticsearch.yml
    regexp="{{ item }}"
    line="{{ item }}"
    state=present
  when: elasticsearch_plugins_config is defined
  with_items: elasticsearch_plugins_config
  notify: restart elasticsearch

# Fix permissions
- file: >
    path="{{ elasticsearch_plugin_dir }}"
    state=directory
    owner={{ elasticsearch_user }}
    group={{ elasticsearch_group }}
    recurse=yes

# - name: Restart for plugins to take effect
  # service:
    # name: elasticsearch
    # state: restarted
